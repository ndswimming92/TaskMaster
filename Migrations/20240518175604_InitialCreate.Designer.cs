// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TaskMaster.Migrations
{
    [DbContext(typeof(TaskMasterDbContext))]
    [Migration("20240518175604_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskMaster.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Work"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Personal"
                        });
                });

            modelBuilder.Entity("TaskMaster.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Finish the quarterly report",
                            DueDate = new DateTime(2024, 5, 21, 12, 56, 4, 526, DateTimeKind.Local).AddTicks(4938),
                            Priority = 1,
                            Title = "Complete Report",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Milk, Bread, Eggs",
                            DueDate = new DateTime(2024, 5, 19, 12, 56, 4, 526, DateTimeKind.Local).AddTicks(5010),
                            Priority = 2,
                            Title = "Buy Groceries",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TaskMaster.Models.TaskCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            TaskId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            TaskId = 2
                        });
                });

            modelBuilder.Entity("TaskMaster.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Password")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = 1234,
                            UserName = "JohnDoe"
                        },
                        new
                        {
                            Id = 2,
                            Password = 5678,
                            UserName = "JaneSmith"
                        });
                });

            modelBuilder.Entity("TaskMaster.Models.Task", b =>
                {
                    b.HasOne("TaskMaster.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskMaster.Models.TaskCategory", b =>
                {
                    b.HasOne("TaskMaster.Models.Category", "Category")
                        .WithMany("TaskCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskMaster.Models.Task", "Task")
                        .WithMany("TaskCategories")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskMaster.Models.Category", b =>
                {
                    b.Navigation("TaskCategories");
                });

            modelBuilder.Entity("TaskMaster.Models.Task", b =>
                {
                    b.Navigation("TaskCategories");
                });

            modelBuilder.Entity("TaskMaster.Models.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
